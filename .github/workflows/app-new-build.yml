name: Create GitHub Release and Upload Zip

on:
  push:
    branches:
      - main

jobs:
  bump_version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Configure Git identity
      run: |
        git config --local user.email "loama18@gmail.com"
        git config --local user.name "loama"

    - name: Bump version for root package.json
      run: |
        npm version patch --no-git-tag-version
        git add package.json package-lock.json
        git commit -m "Bump version [skip ci]"
        
    - name: Bump version for app/package.json
      run: |
        cd app
        npm version patch --no-git-tag-version
        git add package.json package-lock.json
        git commit -m "Bump version in app [skip ci]"
        cd ..

    - name: Push changes
      run: |
        git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
        git push

  release_and_upload:
    needs: bump_version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd app
        npm ci

    - name: Run generate
      run: |
        cd app
        npm run generate

    - name: Zip output folder
      run: |
        cd app/.output
        zip -r ../public.zip public/

    - name: Get version from package.json
      id: get_version
      run: |
        VERSION=$(jq -r .version app/package.json)
        echo "::set-output name=version::$VERSION"
      shell: bash

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app/public.zip
        asset_name: public.zip
        asset_content_type: application/zip
